// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using Sb.Web.Generated;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static Sb.Web.Controllers.AdminController Admin = new Sb.Web.Controllers.T4MVC_AdminController();
    public static Sb.Web.Controllers.ErrorController Error = new Sb.Web.Controllers.T4MVC_ErrorController();
    public static Sb.Web.Controllers.HomeController Home = new Sb.Web.Controllers.T4MVC_HomeController();
    public static Sb.Web.Controllers.QuestionsController Questions = new Sb.Web.Controllers.T4MVC_QuestionsController();
    public static Sb.Web.Controllers.ResultsController Results = new Sb.Web.Controllers.T4MVC_ResultsController();
    public static Sb.Web.Controllers.SeoController Seo = new Sb.Web.Controllers.T4MVC_SeoController();
    public static Sb.Web.Generated.SharedController Shared = new Sb.Web.Generated.SharedController();
}

namespace Sb.Web.Generated
{
}

namespace Sb.Web.Generated
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string ai_0_22_9_build00167_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ai.0.22.9-build00167.min.js") ? Url("ai.0.22.9-build00167.min.js") : Url("ai.0.22.9-build00167.js");
        public static readonly string ai_0_22_9_build00167_min_js = Url("ai.0.22.9-build00167.min.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Assets {
        private const string URLPATH = "~/Assets";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class App {
            private const string URLPATH = "~/Assets/App";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Css {
                private const string URLPATH = "~/Assets/App/Css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string custom_scss = Url("custom.scss");
                public static readonly string questions_scss = Url("questions.scss");
                public static readonly string results_scss = Url("results.scss");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class img {
                private const string URLPATH = "~/Assets/App/img";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bg_controls_png = Url("bg-controls.png");
                public static readonly string bg_fade_down_png = Url("bg-fade-down.png");
                public static readonly string bg_fade_up_png = Url("bg-fade-up.png");
                public static readonly string bg_home_jpg = Url("bg-home.jpg");
                public static readonly string bg_sub_brand_png = Url("bg-sub-brand.png");
                public static readonly string bga_logo_footer_png = Url("bga_logo_footer.png");
                public static readonly string bga_logo_footer_beta_png = Url("bga_logo_footer_beta.png");
                public static readonly string brand_png = Url("brand.png");
                public static readonly string content_bullet_png = Url("content-bullet.png");
                public static readonly string favicon114_png = Url("favicon114.png");
                public static readonly string favicon120_png = Url("favicon120.png");
                public static readonly string favicon144_png = Url("favicon144.png");
                public static readonly string favicon152_png = Url("favicon152.png");
                public static readonly string favicon16_png = Url("favicon16.png");
                public static readonly string favicon32_png = Url("favicon32.png");
                public static readonly string favicon57_png = Url("favicon57.png");
                public static readonly string favicon60_png = Url("favicon60.png");
                public static readonly string favicon72_png = Url("favicon72.png");
                public static readonly string favicon76_png = Url("favicon76.png");
                public static readonly string favicon96_png = Url("favicon96.png");
                public static readonly string header_logo__beta_PNG = Url("header-logo--beta.PNG");
                public static readonly string header_logo_png = Url("header-logo.png");
                public static readonly string header_logo_png_ = Url("header_logo.png");
                public static readonly string ico_account_png = Url("ico-account.png");
                public static readonly string ico_alert_red_png = Url("ico-alert-red.png");
                public static readonly string ico_alert_small_png = Url("ico-alert-small.png");
                public static readonly string ico_alert28_png = Url("ico-alert28.png");
                public static readonly string ico_chat_png = Url("ico-chat.png");
                public static readonly string ico_close_png = Url("ico-close.png");
                public static readonly string ico_delete_png = Url("ico-delete.png");
                public static readonly string ico_dollar_png = Url("ico-dollar.png");
                public static readonly string ico_edit_png = Url("ico-edit.png");
                public static readonly string ico_exclamation_gray_png = Url("ico-exclamation-gray.png");
                public static readonly string ico_exclamation_orange_png = Url("ico-exclamation-orange.png");
                public static readonly string ico_external_png = Url("ico-external.png");
                public static readonly string ico_help_form_png = Url("ico-help-form.png");
                public static readonly string ico_loading_gif = Url("ico-loading.gif");
                public static readonly string ico_remove_small_png = Url("ico-remove-small.png");
                public static readonly string ico_system_png = Url("ico-system.png");
                public static readonly string ico_tick_gray_png = Url("ico-tick-gray.png");
                public static readonly string ico_tick_green_png = Url("ico-tick-green.png");
                public static readonly string ico_ticks_png = Url("ico-ticks.png");
                public static readonly string ico_tip_26_png = Url("ico-tip-26.png");
                public static readonly string sprite_add_individual_png = Url("sprite-add-individual.png");
                public static readonly string sprite_add_organisation_png = Url("sprite-add-organisation.png");
                public static readonly string sprite_close_png = Url("sprite-close.png");
                public static readonly string sprite_custom_controls_png = Url("sprite-custom-controls.png");
                public static readonly string sprite_download_png = Url("sprite-download.png");
                public static readonly string sprite_edit_png = Url("sprite-edit.png");
                public static readonly string sprite_exit_png = Url("sprite-exit.png");
                public static readonly string sprite_expand_collapse_png = Url("sprite-expand-collapse.png");
                public static readonly string sprite_help_small_png = Url("sprite-help-small.png");
                public static readonly string sprite_help_png = Url("sprite-help.png");
                public static readonly string sprite_print_png = Url("sprite-print.png");
                public static readonly string sprite_registration_status_png = Url("sprite-registration-status.png");
                public static readonly string sprite_remove_png = Url("sprite-remove.png");
                public static readonly string sprite_sections_png = Url("sprite-sections.png");
                public static readonly string sprite_steps_png = Url("sprite-steps.png");
                public static readonly string sprite_trash_png = Url("sprite-trash.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Js {
                private const string URLPATH = "~/Assets/App/Js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string startup_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/startup.min.js") ? Url("startup.min.js") : Url("startup.js");
                public static readonly string webchat_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/webchat.min.js") ? Url("webchat.min.js") : Url("webchat.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class scss {
                private const string URLPATH = "~/Assets/App/scss";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _developers_scss = Url("_developers.scss");
                public static readonly string _forms_scss = Url("_forms.scss");
                public static readonly string _grid_scss = Url("_grid.scss");
                public static readonly string _layout_scss = Url("_layout.scss");
                public static readonly string _modules_scss = Url("_modules.scss");
                public static readonly string _normalize_scss = Url("_normalize.scss");
                public static readonly string _print_scss = Url("_print.scss");
                public static readonly string _typography_scss = Url("_typography.scss");
                public static readonly string _variables_scss = Url("_variables.scss");
                public static readonly string style_scss = Url("style.scss");
            }
        
        }
    
        public static readonly string app_scss = Url("app.scss");
        public static readonly string app_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/app.min.css") ? Url("app.min.css") : Url("app.css");
        public static readonly string app_min_css = Url("app.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Vendor {
            private const string URLPATH = "~/Assets/Vendor";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class font_awesome_4_6_1 {
                private const string URLPATH = "~/Assets/Vendor/font-awesome-4.6.1";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    private const string URLPATH = "~/Assets/Vendor/font-awesome-4.6.1/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
                    public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fonts {
                    private const string URLPATH = "~/Assets/Vendor/font-awesome-4.6.1/fonts";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string fontawesome_webfont_eot = Url("fontawesome-webfont.eot");
                    public static readonly string fontawesome_webfont_svg = Url("fontawesome-webfont.svg");
                    public static readonly string fontawesome_webfont_ttf = Url("fontawesome-webfont.ttf");
                    public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
                    public static readonly string fontawesome_webfont_woff2 = Url("fontawesome-webfont.woff2");
                    public static readonly string FontAwesome_otf = Url("FontAwesome.otf");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class less {
                    private const string URLPATH = "~/Assets/Vendor/font-awesome-4.6.1/less";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string animated_less = Url("animated.less");
                    public static readonly string bordered_pulled_less = Url("bordered-pulled.less");
                    public static readonly string core_less = Url("core.less");
                    public static readonly string fixed_width_less = Url("fixed-width.less");
                    public static readonly string font_awesome_less = Url("font-awesome.less");
                    public static readonly string icons_less = Url("icons.less");
                    public static readonly string larger_less = Url("larger.less");
                    public static readonly string list_less = Url("list.less");
                    public static readonly string mixins_less = Url("mixins.less");
                    public static readonly string path_less = Url("path.less");
                    public static readonly string rotated_flipped_less = Url("rotated-flipped.less");
                    public static readonly string screen_reader_less = Url("screen-reader.less");
                    public static readonly string stacked_less = Url("stacked.less");
                    public static readonly string variables_less = Url("variables.less");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class scss {
                    private const string URLPATH = "~/Assets/Vendor/font-awesome-4.6.1/scss";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string _animated_scss = Url("_animated.scss");
                    public static readonly string _bordered_pulled_scss = Url("_bordered-pulled.scss");
                    public static readonly string _core_scss = Url("_core.scss");
                    public static readonly string _fixed_width_scss = Url("_fixed-width.scss");
                    public static readonly string _icons_scss = Url("_icons.scss");
                    public static readonly string _larger_scss = Url("_larger.scss");
                    public static readonly string _list_scss = Url("_list.scss");
                    public static readonly string _mixins_scss = Url("_mixins.scss");
                    public static readonly string _path_scss = Url("_path.scss");
                    public static readonly string _rotated_flipped_scss = Url("_rotated-flipped.scss");
                    public static readonly string _screen_reader_scss = Url("_screen-reader.scss");
                    public static readonly string _stacked_scss = Url("_stacked.scss");
                    public static readonly string _variables_scss = Url("_variables.scss");
                    public static readonly string font_awesome_scss = Url("font-awesome.scss");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class foundation_5_5_3 {
                private const string URLPATH = "~/Assets/Vendor/foundation-5.5.3";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string foundation_min_css = Url("foundation.min.css");
                public static readonly string foundation_min_js = Url("foundation.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class modernizr {
                private const string URLPATH = "~/Assets/Vendor/modernizr";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string modernizr_custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-custom.min.js") ? Url("modernizr-custom.min.js") : Url("modernizr-custom.js");
            }
        
            public static readonly string normalize_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/normalize.min.css") ? Url("normalize.min.css") : Url("normalize.css");
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static class Asset
            {
                public const string _references_js = "~/Scripts/_references.js"; 
                public const string ai_0_22_9_build00167_js = "~/Scripts/ai.0.22.9-build00167.js"; 
                public const string ai_0_22_9_build00167_min_js = "~/Scripts/ai.0.22.9-build00167.min.js"; 
            }
        }
        public static partial class Assets 
        {
            public static partial class App 
            {
                public static partial class Css 
                {
                    public static class Asset
                    {
                    }
                }
                public static partial class img 
                {
                    public static class Asset
                    {
                    }
                }
                public static partial class Js 
                {
                    public static class Asset
                    {
                        public const string startup_js = "~/Assets/App/Js/startup.js"; 
                        public const string webchat_js = "~/Assets/App/Js/webchat.js"; 
                    }
                }
                public static partial class scss 
                {
                    public static class Asset
                    {
                    }
                }
                public static class Asset
                {
                }
            }
            public static partial class Vendor 
            {
                public static partial class font_awesome_4_6_1 
                {
                    public static partial class css 
                    {
                        public static class Asset
                        {
                            public const string font_awesome_css = "~/Assets/Vendor/font-awesome-4.6.1/css/font-awesome.css";
                            public const string font_awesome_min_css = "~/Assets/Vendor/font-awesome-4.6.1/css/font-awesome.min.css";
                        }
                    }
                    public static partial class fonts 
                    {
                        public static class Asset
                        {
                        }
                    }
                    public static partial class less 
                    {
                        public static class Asset
                        {
                        }
                    }
                    public static partial class scss 
                    {
                        public static class Asset
                        {
                        }
                    }
                    public static class Asset
                    {
                    }
                }
                public static partial class foundation_5_5_3 
                {
                    public static class Asset
                    {
                        public const string foundation_min_css = "~/Assets/Vendor/foundation-5.5.3/foundation.min.css";
                        public const string foundation_min_js = "~/Assets/Vendor/foundation-5.5.3/foundation.min.js"; 
                    }
                }
                public static partial class modernizr 
                {
                    public static class Asset
                    {
                        public const string modernizr_custom_js = "~/Assets/Vendor/modernizr/modernizr-custom.js"; 
                    }
                }
                public static class Asset
                {
                    public const string normalize_css = "~/Assets/Vendor/normalize.css";
                }
            }
            public static class Asset
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


